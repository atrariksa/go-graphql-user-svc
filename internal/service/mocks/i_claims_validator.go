// Code generated by mockery v2.40.2. DO NOT EDIT.

package mocks

import (
	jwt "github.com/golang-jwt/jwt/v4"
	mock "github.com/stretchr/testify/mock"
)

// IClaimsValidator is an autogenerated mock type for the IClaimsValidator type
type IClaimsValidator struct {
	mock.Mock
}

// IsAdmin provides a mock function with given fields: mapClaims
func (_m *IClaimsValidator) IsAdmin(mapClaims jwt.MapClaims) bool {
	ret := _m.Called(mapClaims)

	if len(ret) == 0 {
		panic("no return value specified for IsAdmin")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(jwt.MapClaims) bool); ok {
		r0 = rf(mapClaims)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewIClaimsValidator creates a new instance of IClaimsValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClaimsValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClaimsValidator {
	mock := &IClaimsValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
